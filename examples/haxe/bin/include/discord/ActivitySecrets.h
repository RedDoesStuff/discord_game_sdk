// Generated by Haxe 4.3.3
#ifndef INCLUDED_discord_ActivitySecrets
#define INCLUDED_discord_ActivitySecrets

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_699c9a626acf5a85_566_new)
#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
HX_DECLARE_CLASS1(discord,ActivitySecrets)

namespace discord{


class HXCPP_CLASS_ATTRIBUTES ActivitySecrets_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ActivitySecrets_obj OBJ_;
		ActivitySecrets_obj();

	public:
		enum { _hx_ClassId = 0x4d707aa8 };

		void __construct(::String match,::String join,::String spectate);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="discord.ActivitySecrets")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"discord.ActivitySecrets"); }

		inline static ::hx::ObjectPtr< ActivitySecrets_obj > __new(::String match,::String join,::String spectate) {
			::hx::ObjectPtr< ActivitySecrets_obj > __this = new ActivitySecrets_obj();
			__this->__construct(match,join,spectate);
			return __this;
		}

		inline static ::hx::ObjectPtr< ActivitySecrets_obj > __alloc(::hx::Ctx *_hx_ctx,::String match,::String join,::String spectate) {
			ActivitySecrets_obj *__this = (ActivitySecrets_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ActivitySecrets_obj), true, "discord.ActivitySecrets"));
			*(void **)__this = ActivitySecrets_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_699c9a626acf5a85_566_new)
HXLINE( 567)		::String tmp = match;
HXDLIN( 567)		::String _hx_tmp;
HXDLIN( 567)		if (::hx::IsNotNull( tmp )) {
HXLINE( 567)			_hx_tmp = tmp;
            		}
            		else {
HXLINE( 567)			_hx_tmp = HX_("",00,00,00,00);
            		}
HXDLIN( 567)		( ( ::discord::ActivitySecrets)(__this) )->set_match(_hx_tmp);
HXLINE( 568)		::String tmp1 = join;
HXDLIN( 568)		::String _hx_tmp1;
HXDLIN( 568)		if (::hx::IsNotNull( tmp1 )) {
HXLINE( 568)			_hx_tmp1 = tmp1;
            		}
            		else {
HXLINE( 568)			_hx_tmp1 = HX_("",00,00,00,00);
            		}
HXDLIN( 568)		( ( ::discord::ActivitySecrets)(__this) )->set_join(_hx_tmp1);
HXLINE( 569)		::String tmp2 = spectate;
HXDLIN( 569)		::String _hx_tmp2;
HXDLIN( 569)		if (::hx::IsNotNull( tmp2 )) {
HXLINE( 569)			_hx_tmp2 = tmp2;
            		}
            		else {
HXLINE( 569)			_hx_tmp2 = HX_("",00,00,00,00);
            		}
HXDLIN( 569)		( ( ::discord::ActivitySecrets)(__this) )->set_spectate(_hx_tmp2);
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ActivitySecrets_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ActivitySecrets",d4,7d,c7,bc); }

		 DiscordActivitySecrets internal_;
		::String get_match();
		::Dynamic get_match_dyn();

		::String set_match(::String v);
		::Dynamic set_match_dyn();

		::String get_join();
		::Dynamic get_join_dyn();

		::String set_join(::String v);
		::Dynamic set_join_dyn();

		::String get_spectate();
		::Dynamic get_spectate_dyn();

		::String set_spectate(::String v);
		::Dynamic set_spectate_dyn();

};

} // end namespace discord

#endif /* INCLUDED_discord_ActivitySecrets */ 
