// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
#ifndef INCLUDED_discord_ActivityAssets
#include <discord/ActivityAssets.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6c479409f713367e_431_new,"discord.ActivityAssets","new",0xdb545b46,"discord.ActivityAssets.new","discord/Types.hx",431,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_6c479409f713367e_441_get_largeImage,"discord.ActivityAssets","get_largeImage",0xb128b0c3,"discord.ActivityAssets.get_largeImage","discord/Types.hx",441,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_6c479409f713367e_447_set_largeImage,"discord.ActivityAssets","set_largeImage",0xd1489937,"discord.ActivityAssets.set_largeImage","discord/Types.hx",447,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_6c479409f713367e_453_get_largeText,"discord.ActivityAssets","get_largeText",0xc69b6045,"discord.ActivityAssets.get_largeText","discord/Types.hx",453,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_6c479409f713367e_459_set_largeText,"discord.ActivityAssets","set_largeText",0x0ba14251,"discord.ActivityAssets.set_largeText","discord/Types.hx",459,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_6c479409f713367e_465_get_smallImage,"discord.ActivityAssets","get_smallImage",0xa6942837,"discord.ActivityAssets.get_smallImage","discord/Types.hx",465,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_6c479409f713367e_471_set_smallImage,"discord.ActivityAssets","set_smallImage",0xc6b410ab,"discord.ActivityAssets.set_smallImage","discord/Types.hx",471,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_6c479409f713367e_477_get_smallText,"discord.ActivityAssets","get_smallText",0x7e3c9351,"discord.ActivityAssets.get_smallText","discord/Types.hx",477,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_6c479409f713367e_483_set_smallText,"discord.ActivityAssets","set_smallText",0xc342755d,"discord.ActivityAssets.set_smallText","discord/Types.hx",483,0xbb915808)
namespace discord{

void ActivityAssets_obj::__construct(::String largeImage,::String largeText,::String smallImage,::String smallText){
            	HX_STACKFRAME(&_hx_pos_6c479409f713367e_431_new)
HXLINE( 432)		::String tmp = largeImage;
HXDLIN( 432)		::String _hx_tmp;
HXDLIN( 432)		if (::hx::IsNotNull( tmp )) {
HXLINE( 432)			_hx_tmp = tmp;
            		}
            		else {
HXLINE( 432)			_hx_tmp = HX_("",00,00,00,00);
            		}
HXDLIN( 432)		this->set_largeImage(_hx_tmp);
HXLINE( 433)		::String tmp1 = largeText;
HXDLIN( 433)		::String _hx_tmp1;
HXDLIN( 433)		if (::hx::IsNotNull( tmp1 )) {
HXLINE( 433)			_hx_tmp1 = tmp1;
            		}
            		else {
HXLINE( 433)			_hx_tmp1 = HX_("",00,00,00,00);
            		}
HXDLIN( 433)		this->set_largeText(_hx_tmp1);
HXLINE( 434)		::String tmp2 = smallImage;
HXDLIN( 434)		::String _hx_tmp2;
HXDLIN( 434)		if (::hx::IsNotNull( tmp2 )) {
HXLINE( 434)			_hx_tmp2 = tmp2;
            		}
            		else {
HXLINE( 434)			_hx_tmp2 = HX_("",00,00,00,00);
            		}
HXDLIN( 434)		this->set_smallImage(_hx_tmp2);
HXLINE( 435)		::String tmp3 = smallText;
HXDLIN( 435)		::String _hx_tmp3;
HXDLIN( 435)		if (::hx::IsNotNull( tmp3 )) {
HXLINE( 435)			_hx_tmp3 = tmp3;
            		}
            		else {
HXLINE( 435)			_hx_tmp3 = HX_("",00,00,00,00);
            		}
HXDLIN( 435)		this->set_smallText(_hx_tmp3);
            	}

Dynamic ActivityAssets_obj::__CreateEmpty() { return new ActivityAssets_obj; }

void *ActivityAssets_obj::_hx_vtable = 0;

Dynamic ActivityAssets_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ActivityAssets_obj > _hx_result = new ActivityAssets_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool ActivityAssets_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3653889a;
}

::String ActivityAssets_obj::get_largeImage(){
            	HX_STACKFRAME(&_hx_pos_6c479409f713367e_441_get_largeImage)
            	return internal_.large_image;

HXDLIN( 441)		return HX_("",00,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ActivityAssets_obj,get_largeImage,return )

::String ActivityAssets_obj::set_largeImage(::String v){
            	HX_STACKFRAME(&_hx_pos_6c479409f713367e_447_set_largeImage)
            	strncpy(internal_.large_image, v, 128);
					internal_.large_image[128 - 1] = '\0';
					return internal_.large_image;

HXDLIN( 447)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ActivityAssets_obj,set_largeImage,return )

::String ActivityAssets_obj::get_largeText(){
            	HX_STACKFRAME(&_hx_pos_6c479409f713367e_453_get_largeText)
            	return internal_.large_text;

HXDLIN( 453)		return HX_("",00,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ActivityAssets_obj,get_largeText,return )

::String ActivityAssets_obj::set_largeText(::String v){
            	HX_STACKFRAME(&_hx_pos_6c479409f713367e_459_set_largeText)
            	strncpy(internal_.large_text, v, 128);
					internal_.large_text[128 - 1] = '\0';
					return internal_.large_text;

HXDLIN( 459)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ActivityAssets_obj,set_largeText,return )

::String ActivityAssets_obj::get_smallImage(){
            	HX_STACKFRAME(&_hx_pos_6c479409f713367e_465_get_smallImage)
            	return internal_.small_image;

HXDLIN( 465)		return HX_("",00,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ActivityAssets_obj,get_smallImage,return )

::String ActivityAssets_obj::set_smallImage(::String v){
            	HX_STACKFRAME(&_hx_pos_6c479409f713367e_471_set_smallImage)
            	strncpy(internal_.small_image, v, 128);
					internal_.small_image[128 - 1] = '\0';
					return internal_.small_image;

HXDLIN( 471)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ActivityAssets_obj,set_smallImage,return )

::String ActivityAssets_obj::get_smallText(){
            	HX_STACKFRAME(&_hx_pos_6c479409f713367e_477_get_smallText)
            	return internal_.small_text;

HXDLIN( 477)		return HX_("",00,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ActivityAssets_obj,get_smallText,return )

::String ActivityAssets_obj::set_smallText(::String v){
            	HX_STACKFRAME(&_hx_pos_6c479409f713367e_483_set_smallText)
            	strncpy(internal_.small_text, v, 128);
					internal_.small_text[128 - 1] = '\0';
					return internal_.small_text;

HXDLIN( 483)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ActivityAssets_obj,set_smallText,return )


ActivityAssets_obj::ActivityAssets_obj()
{
}

void ActivityAssets_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ActivityAssets);
	HX_MARK_MEMBER_NAME(internal_,"internal_");
	HX_MARK_END_CLASS();
}

void ActivityAssets_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(internal_,"internal_");
}

::hx::Val ActivityAssets_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"internal_") ) { return ::hx::Val( cpp::Struct<  DiscordActivityAssets >( internal_ ) ); }
		if (HX_FIELD_EQ(inName,"largeText") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_largeText() ); }
		if (HX_FIELD_EQ(inName,"smallText") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_smallText() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"largeImage") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_largeImage() ); }
		if (HX_FIELD_EQ(inName,"smallImage") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_smallImage() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_largeText") ) { return ::hx::Val( get_largeText_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_largeText") ) { return ::hx::Val( set_largeText_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_smallText") ) { return ::hx::Val( get_smallText_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_smallText") ) { return ::hx::Val( set_smallText_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"get_largeImage") ) { return ::hx::Val( get_largeImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_largeImage") ) { return ::hx::Val( set_largeImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_smallImage") ) { return ::hx::Val( get_smallImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_smallImage") ) { return ::hx::Val( set_smallImage_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ActivityAssets_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"internal_") ) { internal_=inValue.Cast< cpp::Struct<  DiscordActivityAssets >  >(); return inValue; }
		if (HX_FIELD_EQ(inName,"largeText") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_largeText(inValue.Cast< ::String >()) ); }
		if (HX_FIELD_EQ(inName,"smallText") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_smallText(inValue.Cast< ::String >()) ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"largeImage") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_largeImage(inValue.Cast< ::String >()) ); }
		if (HX_FIELD_EQ(inName,"smallImage") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_smallImage(inValue.Cast< ::String >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ActivityAssets_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("internal_",82,ee,23,3f));
	outFields->push(HX_("largeImage",a0,f5,1e,f3));
	outFields->push(HX_("largeText",08,26,92,bc));
	outFields->push(HX_("smallImage",14,6d,8a,e8));
	outFields->push(HX_("smallText",14,59,33,74));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ActivityAssets_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /*  DiscordActivityAssets */ ,(int)offsetof(ActivityAssets_obj,internal_),HX_("internal_",82,ee,23,3f)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ActivityAssets_obj_sStaticStorageInfo = 0;
#endif

static ::String ActivityAssets_obj_sMemberFields[] = {
	HX_("internal_",82,ee,23,3f),
	HX_("get_largeImage",e9,7d,14,69),
	HX_("set_largeImage",5d,66,34,89),
	HX_("get_largeText",df,f9,f5,7d),
	HX_("set_largeText",eb,db,fb,c2),
	HX_("get_smallImage",5d,f5,7f,5e),
	HX_("set_smallImage",d1,dd,9f,7e),
	HX_("get_smallText",eb,2c,97,35),
	HX_("set_smallText",f7,0e,9d,7a),
	::String(null()) };

::hx::Class ActivityAssets_obj::__mClass;

void ActivityAssets_obj::__register()
{
	ActivityAssets_obj _hx_dummy;
	ActivityAssets_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("discord.ActivityAssets",54,00,f0,26);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ActivityAssets_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ActivityAssets_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ActivityAssets_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ActivityAssets_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace discord
