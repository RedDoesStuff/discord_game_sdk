// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
#ifndef INCLUDED_discord_LobbySearchQuery
#include <discord/LobbySearchQuery.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_aa4a7efcaa0016d9_1326_new,"discord.LobbySearchQuery","new",0x1491621e,"discord.LobbySearchQuery.new","discord/Types.hx",1326,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_aa4a7efcaa0016d9_1330_filter,"discord.LobbySearchQuery","filter",0x4a9eb8ba,"discord.LobbySearchQuery.filter","discord/Types.hx",1330,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_aa4a7efcaa0016d9_1335_sort,"discord.LobbySearchQuery","sort",0xedfa1be0,"discord.LobbySearchQuery.sort","discord/Types.hx",1335,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_aa4a7efcaa0016d9_1340_limit,"discord.LobbySearchQuery","limit",0x41151c79,"discord.LobbySearchQuery.limit","discord/Types.hx",1340,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_aa4a7efcaa0016d9_1345_distance,"discord.LobbySearchQuery","distance",0x91bcf0b7,"discord.LobbySearchQuery.distance","discord/Types.hx",1345,0xbb915808)
namespace discord{

void LobbySearchQuery_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_aa4a7efcaa0016d9_1326_new)
            	}

Dynamic LobbySearchQuery_obj::__CreateEmpty() { return new LobbySearchQuery_obj; }

void *LobbySearchQuery_obj::_hx_vtable = 0;

Dynamic LobbySearchQuery_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< LobbySearchQuery_obj > _hx_result = new LobbySearchQuery_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool LobbySearchQuery_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x224560f2;
}

int LobbySearchQuery_obj::filter(::String key,int comparison,int search_cast,::String value){
            	HX_STACKFRAME(&_hx_pos_aa4a7efcaa0016d9_1330_filter)
            	return (int)internal_->filter(internal_, const_cast<char*>(key.__s), (EDiscordLobbySearchComparison)comparison, (EDiscordLobbySearchCast)search_cast, const_cast<char*>(value.__s));

HXDLIN(1330)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC4(LobbySearchQuery_obj,filter,return )

int LobbySearchQuery_obj::sort(::String key,int search_cast,::String value){
            	HX_STACKFRAME(&_hx_pos_aa4a7efcaa0016d9_1335_sort)
            	return (int)internal_->sort(internal_, const_cast<char*>(key.__s), (EDiscordLobbySearchCast)search_cast, const_cast<char*>(value.__s));

HXDLIN(1335)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC3(LobbySearchQuery_obj,sort,return )

int LobbySearchQuery_obj::limit(unsigned int limit){
            	HX_STACKFRAME(&_hx_pos_aa4a7efcaa0016d9_1340_limit)
            	return (int)internal_->limit(internal_, limit);

HXDLIN(1340)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(LobbySearchQuery_obj,limit,return )

int LobbySearchQuery_obj::distance(int distance){
            	HX_STACKFRAME(&_hx_pos_aa4a7efcaa0016d9_1345_distance)
            	return (int)internal_->distance(internal_, (EDiscordLobbySearchDistance)distance);

HXDLIN(1345)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(LobbySearchQuery_obj,distance,return )


LobbySearchQuery_obj::LobbySearchQuery_obj()
{
}

void LobbySearchQuery_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(LobbySearchQuery);
	HX_MARK_MEMBER_NAME(internal_,"internal_");
	HX_MARK_END_CLASS();
}

void LobbySearchQuery_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(internal_,"internal_");
}

::hx::Val LobbySearchQuery_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"sort") ) { return ::hx::Val( sort_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"limit") ) { return ::hx::Val( limit_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"filter") ) { return ::hx::Val( filter_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"distance") ) { return ::hx::Val( distance_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

void LobbySearchQuery_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("internal_",82,ee,23,3f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo LobbySearchQuery_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /*  IDiscordLobbySearchQuery* */ ,(int)offsetof(LobbySearchQuery_obj,internal_),HX_("internal_",82,ee,23,3f)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *LobbySearchQuery_obj_sStaticStorageInfo = 0;
#endif

static ::String LobbySearchQuery_obj_sMemberFields[] = {
	HX_("filter",b8,1f,35,85),
	HX_("sort",5e,27,58,4c),
	HX_("limit",3b,1f,01,75),
	HX_("distance",35,93,f9,6b),
	::String(null()) };

::hx::Class LobbySearchQuery_obj::__mClass;

void LobbySearchQuery_obj::__register()
{
	LobbySearchQuery_obj _hx_dummy;
	LobbySearchQuery_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("discord.LobbySearchQuery",2c,bb,ba,cc);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(LobbySearchQuery_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< LobbySearchQuery_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LobbySearchQuery_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LobbySearchQuery_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace discord
