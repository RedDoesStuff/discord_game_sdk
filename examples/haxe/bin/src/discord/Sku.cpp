// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
#ifndef INCLUDED_discord_Sku
#include <discord/Sku.h>
#endif
#ifndef INCLUDED_discord_SkuPrice
#include <discord/SkuPrice.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_80bda841529497b5_1132_new,"discord.Sku","new",0xbd1b636d,"discord.Sku.new","discord/Types.hx",1132,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_80bda841529497b5_1146_get_id,"discord.Sku","get_id",0x0fbe0637,"discord.Sku.get_id","discord/Types.hx",1146,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_80bda841529497b5_1150_set_id,"discord.Sku","set_id",0xdc065aab,"discord.Sku.set_id","discord/Types.hx",1150,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_80bda841529497b5_1156_get_type,"discord.Sku","get_type",0x074aec16,"discord.Sku.get_type","discord/Types.hx",1156,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_80bda841529497b5_1160_set_type,"discord.Sku","set_type",0xb5a8458a,"discord.Sku.set_type","discord/Types.hx",1160,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_80bda841529497b5_1166_get_name,"discord.Sku","get_name",0x03416ba7,"discord.Sku.get_name","discord/Types.hx",1166,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_80bda841529497b5_1172_set_name,"discord.Sku","set_name",0xb19ec51b,"discord.Sku.set_name","discord/Types.hx",1172,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_80bda841529497b5_1179_get_price,"discord.Sku","get_price",0x080385ad,"discord.Sku.get_price","discord/Types.hx",1179,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_80bda841529497b5_1183_set_price,"discord.Sku","set_price",0xeb5471b9,"discord.Sku.set_price","discord/Types.hx",1183,0xbb915808)
namespace discord{

void Sku_obj::__construct( ::Dynamic id, ::Dynamic type,::String name, ::discord::SkuPrice price){
            	HX_GC_STACKFRAME(&_hx_pos_80bda841529497b5_1132_new)
HXLINE(1175)		this->_price =  ::discord::SkuPrice_obj::__alloc( HX_CTX ,null(),null());
HXLINE(1137)		 ::Dynamic tmp = id;
HXDLIN(1137)		::cpp::Int64 _hx_tmp;
HXDLIN(1137)		if (::hx::IsNotNull( tmp )) {
HXLINE(1137)			_hx_tmp = ( (::cpp::Int64)(tmp) );
            		}
            		else {
HXLINE(1137)			_hx_tmp = ( (::cpp::Int64)(0) );
            		}
HXDLIN(1137)		this->set_id(_hx_tmp);
HXLINE(1138)		 ::Dynamic tmp1 = type;
HXDLIN(1138)		int _hx_tmp1;
HXDLIN(1138)		if (::hx::IsNotNull( tmp1 )) {
HXLINE(1138)			_hx_tmp1 = ( (int)(tmp1) );
            		}
            		else {
HXLINE(1138)			_hx_tmp1 = 1;
            		}
HXDLIN(1138)		this->set_type(_hx_tmp1);
HXLINE(1139)		::String tmp2 = name;
HXDLIN(1139)		::String _hx_tmp2;
HXDLIN(1139)		if (::hx::IsNotNull( tmp2 )) {
HXLINE(1139)			_hx_tmp2 = tmp2;
            		}
            		else {
HXLINE(1139)			_hx_tmp2 = HX_("",00,00,00,00);
            		}
HXDLIN(1139)		this->set_name(_hx_tmp2);
HXLINE(1140)		 ::discord::SkuPrice tmp3 = price;
HXDLIN(1140)		 ::discord::SkuPrice _hx_tmp3;
HXDLIN(1140)		if (::hx::IsNotNull( tmp3 )) {
HXLINE(1140)			_hx_tmp3 = tmp3;
            		}
            		else {
HXLINE(1140)			_hx_tmp3 =  ::discord::SkuPrice_obj::__alloc( HX_CTX ,null(),null());
            		}
HXDLIN(1140)		this->set_price(_hx_tmp3);
            	}

Dynamic Sku_obj::__CreateEmpty() { return new Sku_obj; }

void *Sku_obj::_hx_vtable = 0;

Dynamic Sku_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Sku_obj > _hx_result = new Sku_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool Sku_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x40a36791;
}

::cpp::Int64 Sku_obj::get_id(){
            	HX_STACKFRAME(&_hx_pos_80bda841529497b5_1146_get_id)
            	return internal_.id;

HXDLIN(1146)		return ( (::cpp::Int64)(0) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(Sku_obj,get_id,return )

::cpp::Int64 Sku_obj::set_id(::cpp::Int64 v){
            	HX_STACKFRAME(&_hx_pos_80bda841529497b5_1150_set_id)
            	internal_.id = v;

HXDLIN(1150)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Sku_obj,set_id,return )

int Sku_obj::get_type(){
            	HX_STACKFRAME(&_hx_pos_80bda841529497b5_1156_get_type)
            	return (int)internal_.type;

HXDLIN(1156)		return 1;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Sku_obj,get_type,return )

int Sku_obj::set_type(int v){
            	HX_STACKFRAME(&_hx_pos_80bda841529497b5_1160_set_type)
            	internal_.type = (EDiscordSkuType)v;

HXDLIN(1160)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Sku_obj,set_type,return )

::String Sku_obj::get_name(){
            	HX_STACKFRAME(&_hx_pos_80bda841529497b5_1166_get_name)
            	return internal_.name;

HXDLIN(1166)		return HX_("",00,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Sku_obj,get_name,return )

::String Sku_obj::set_name(::String v){
            	HX_STACKFRAME(&_hx_pos_80bda841529497b5_1172_set_name)
            	strncpy(internal_.name, v, 256);
					internal_.name[256 - 1] = '\0';
					return internal_.name;

HXDLIN(1172)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Sku_obj,set_name,return )

 ::discord::SkuPrice Sku_obj::get_price(){
            	HX_STACKFRAME(&_hx_pos_80bda841529497b5_1179_get_price)
            	_price->internal_ = internal_.price;

HXDLIN(1179)		return this->_price;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Sku_obj,get_price,return )

 ::discord::SkuPrice Sku_obj::set_price( ::discord::SkuPrice v){
            	HX_STACKFRAME(&_hx_pos_80bda841529497b5_1183_set_price)
            	_price->internal_ = v->internal_;

HXDLIN(1183)		return this->_price;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Sku_obj,set_price,return )


::hx::ObjectPtr< Sku_obj > Sku_obj::__new( ::Dynamic id, ::Dynamic type,::String name, ::discord::SkuPrice price) {
	::hx::ObjectPtr< Sku_obj > __this = new Sku_obj();
	__this->__construct(id,type,name,price);
	return __this;
}

::hx::ObjectPtr< Sku_obj > Sku_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic id, ::Dynamic type,::String name, ::discord::SkuPrice price) {
	Sku_obj *__this = (Sku_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Sku_obj), true, "discord.Sku"));
	*(void **)__this = Sku_obj::_hx_vtable;
	__this->__construct(id,type,name,price);
	return __this;
}

Sku_obj::Sku_obj()
{
}

void Sku_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Sku);
	HX_MARK_MEMBER_NAME(internal_,"internal_");
	HX_MARK_MEMBER_NAME(_price,"_price");
	HX_MARK_END_CLASS();
}

void Sku_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(internal_,"internal_");
	HX_VISIT_MEMBER_NAME(_price,"_price");
}

::hx::Val Sku_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_id() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_type() ); }
		if (HX_FIELD_EQ(inName,"name") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_name() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"price") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_price() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"get_id") ) { return ::hx::Val( get_id_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_id") ) { return ::hx::Val( set_id_dyn() ); }
		if (HX_FIELD_EQ(inName,"_price") ) { return ::hx::Val( _price ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_type") ) { return ::hx::Val( get_type_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_type") ) { return ::hx::Val( set_type_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_name") ) { return ::hx::Val( get_name_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_name") ) { return ::hx::Val( set_name_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"internal_") ) { return ::hx::Val( cpp::Struct<  DiscordSku >( internal_ ) ); }
		if (HX_FIELD_EQ(inName,"get_price") ) { return ::hx::Val( get_price_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_price") ) { return ::hx::Val( set_price_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Sku_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_id(inValue.Cast< ::cpp::Int64 >()) ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_type(inValue.Cast< int >()) ); }
		if (HX_FIELD_EQ(inName,"name") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_name(inValue.Cast< ::String >()) ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"price") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_price(inValue.Cast<  ::discord::SkuPrice >()) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_price") ) { _price=inValue.Cast<  ::discord::SkuPrice >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"internal_") ) { internal_=inValue.Cast< cpp::Struct<  DiscordSku >  >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Sku_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("internal_",82,ee,23,3f));
	outFields->push(HX_("id",db,5b,00,00));
	outFields->push(HX_("type",ba,f2,08,4d));
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("_price",ca,95,72,c4));
	outFields->push(HX_("price",89,4e,8b,c8));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Sku_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /*  DiscordSku */ ,(int)offsetof(Sku_obj,internal_),HX_("internal_",82,ee,23,3f)},
	{::hx::fsObject /*  ::discord::SkuPrice */ ,(int)offsetof(Sku_obj,_price),HX_("_price",ca,95,72,c4)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Sku_obj_sStaticStorageInfo = 0;
#endif

static ::String Sku_obj_sMemberFields[] = {
	HX_("internal_",82,ee,23,3f),
	HX_("get_id",24,f3,2f,a3),
	HX_("set_id",98,47,78,6f),
	HX_("get_type",43,ae,c3,cc),
	HX_("set_type",b7,07,21,7b),
	HX_("get_name",d4,2d,ba,c8),
	HX_("set_name",48,87,17,77),
	HX_("_price",ca,95,72,c4),
	HX_("get_price",e0,aa,34,0c),
	HX_("set_price",ec,96,85,ef),
	::String(null()) };

::hx::Class Sku_obj::__mClass;

void Sku_obj::__register()
{
	Sku_obj _hx_dummy;
	Sku_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("discord.Sku",fb,28,98,65);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Sku_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Sku_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Sku_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Sku_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace discord
