// Generated by Haxe 4.3.3
#ifndef INCLUDED_discord_Core
#define INCLUDED_discord_Core

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
HX_DECLARE_CLASS1(discord,ActivityManager)
HX_DECLARE_CLASS1(discord,Core)

namespace discord{


class HXCPP_CLASS_ATTRIBUTES Core_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Core_obj OBJ_;
		Core_obj();

	public:
		enum { _hx_ClassId = 0x43c6d42b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="discord.Core")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"discord.Core"); }
		static ::hx::ObjectPtr< Core_obj > __new();
		static ::hx::ObjectPtr< Core_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Core_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Core",7f,e9,9d,2c); }

		static int create(::cpp::Int64 clientID,::cpp::UInt64 flags, ::discord::Core instance);
		static ::Dynamic create_dyn();

		 IDiscordCore* internal_;
		void destroy();
		::Dynamic destroy_dyn();

		int runCallbacks();
		::Dynamic runCallbacks_dyn();

		 ::discord::ActivityManager _activityManager;
		 ::discord::ActivityManager get_activityManager();
		::Dynamic get_activityManager_dyn();

};

} // end namespace discord

#endif /* INCLUDED_discord_Core */ 
