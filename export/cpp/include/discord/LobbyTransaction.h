// Generated by Haxe 4.3.3
#ifndef INCLUDED_discord_LobbyTransaction
#define INCLUDED_discord_LobbyTransaction

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_41efc225d444f5b3_1272_new)
#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
HX_DECLARE_CLASS1(discord,LobbyTransaction)

namespace discord{


class HXCPP_CLASS_ATTRIBUTES LobbyTransaction_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef LobbyTransaction_obj OBJ_;
		LobbyTransaction_obj();

	public:
		enum { _hx_ClassId = 0x3bd47634 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="discord.LobbyTransaction")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"discord.LobbyTransaction"); }

		inline static ::hx::ObjectPtr< LobbyTransaction_obj > __new() {
			::hx::ObjectPtr< LobbyTransaction_obj > __this = new LobbyTransaction_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< LobbyTransaction_obj > __alloc(::hx::Ctx *_hx_ctx) {
			LobbyTransaction_obj *__this = (LobbyTransaction_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(LobbyTransaction_obj), true, "discord.LobbyTransaction"));
			*(void **)__this = LobbyTransaction_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_41efc225d444f5b3_1272_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~LobbyTransaction_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("LobbyTransaction",88,39,a0,38); }

		 IDiscordLobbyTransaction* internal_;
		int setType(int type);
		::Dynamic setType_dyn();

		int setOwner(::cpp::Int64 ownerID);
		::Dynamic setOwner_dyn();

		int setCapacity(unsigned int capacity);
		::Dynamic setCapacity_dyn();

		int setMetadata(::String key,::String value);
		::Dynamic setMetadata_dyn();

		int deleteMetadata(::String key);
		::Dynamic deleteMetadata_dyn();

		int setLocked(bool locked);
		::Dynamic setLocked_dyn();

};

} // end namespace discord

#endif /* INCLUDED_discord_LobbyTransaction */ 
