// Generated by Haxe 4.3.3
#ifndef INCLUDED_discord_Relationship
#define INCLUDED_discord_Relationship

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
HX_DECLARE_CLASS1(discord,Presence)
HX_DECLARE_CLASS1(discord,Relationship)
HX_DECLARE_CLASS1(discord,User)

namespace discord{


class HXCPP_CLASS_ATTRIBUTES Relationship_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Relationship_obj OBJ_;
		Relationship_obj();

	public:
		enum { _hx_ClassId = 0x1c3ee360 };

		void __construct( ::Dynamic type, ::discord::User user, ::discord::Presence presence);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="discord.Relationship")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"discord.Relationship"); }
		static ::hx::ObjectPtr< Relationship_obj > __new( ::Dynamic type, ::discord::User user, ::discord::Presence presence);
		static ::hx::ObjectPtr< Relationship_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic type, ::discord::User user, ::discord::Presence presence);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Relationship_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Relationship",98,e0,21,f1); }

		 DiscordRelationship internal_;
		int get_type();
		::Dynamic get_type_dyn();

		int set_type(int v);
		::Dynamic set_type_dyn();

		 ::discord::User _user;
		 ::discord::User get_user();
		::Dynamic get_user_dyn();

		 ::discord::User set_user( ::discord::User v);
		::Dynamic set_user_dyn();

		 ::discord::Presence _presence;
		 ::discord::Presence get_presence();
		::Dynamic get_presence_dyn();

		 ::discord::Presence set_presence( ::discord::Presence v);
		::Dynamic set_presence_dyn();

};

} // end namespace discord

#endif /* INCLUDED_discord_Relationship */ 
