// Generated by Haxe 4.3.3
#ifndef INCLUDED_discord_SkuPrice
#define INCLUDED_discord_SkuPrice

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_22d015a7f772821c_1103_new)
#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
HX_DECLARE_CLASS1(discord,SkuPrice)

namespace discord{


class HXCPP_CLASS_ATTRIBUTES SkuPrice_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SkuPrice_obj OBJ_;
		SkuPrice_obj();

	public:
		enum { _hx_ClassId = 0x7fa149ac };

		void __construct( ::Dynamic amount,::String currency);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="discord.SkuPrice")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"discord.SkuPrice"); }

		inline static ::hx::ObjectPtr< SkuPrice_obj > __new( ::Dynamic amount,::String currency) {
			::hx::ObjectPtr< SkuPrice_obj > __this = new SkuPrice_obj();
			__this->__construct(amount,currency);
			return __this;
		}

		inline static ::hx::ObjectPtr< SkuPrice_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic amount,::String currency) {
			SkuPrice_obj *__this = (SkuPrice_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SkuPrice_obj), true, "discord.SkuPrice"));
			*(void **)__this = SkuPrice_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_22d015a7f772821c_1103_new)
HXLINE(1104)		 ::Dynamic tmp = amount;
HXDLIN(1104)		unsigned int _hx_tmp;
HXDLIN(1104)		if (::hx::IsNotNull( tmp )) {
HXLINE(1104)			_hx_tmp = ( (unsigned int)(tmp) );
            		}
            		else {
HXLINE(1104)			_hx_tmp = ( (unsigned int)(0) );
            		}
HXDLIN(1104)		( ( ::discord::SkuPrice)(__this) )->set_amount(_hx_tmp);
HXLINE(1105)		::String tmp1 = currency;
HXDLIN(1105)		::String _hx_tmp1;
HXDLIN(1105)		if (::hx::IsNotNull( tmp1 )) {
HXLINE(1105)			_hx_tmp1 = tmp1;
            		}
            		else {
HXLINE(1105)			_hx_tmp1 = HX_("",00,00,00,00);
            		}
HXDLIN(1105)		( ( ::discord::SkuPrice)(__this) )->set_currency(_hx_tmp1);
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SkuPrice_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SkuPrice",8c,98,4d,10); }

		 DiscordSkuPrice internal_;
		unsigned int get_amount();
		::Dynamic get_amount_dyn();

		unsigned int set_amount(unsigned int v);
		::Dynamic set_amount_dyn();

		::String get_currency();
		::Dynamic get_currency_dyn();

		::String set_currency(::String v);
		::Dynamic set_currency_dyn();

};

} // end namespace discord

#endif /* INCLUDED_discord_SkuPrice */ 
