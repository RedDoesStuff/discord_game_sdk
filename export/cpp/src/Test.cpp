// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_Test
#include <Test.h>
#endif
#ifndef INCLUDED_discord_Activity
#include <discord/Activity.h>
#endif
#ifndef INCLUDED_discord_ActivityAssets
#include <discord/ActivityAssets.h>
#endif
#ifndef INCLUDED_discord_ActivityManager
#include <discord/ActivityManager.h>
#endif
#ifndef INCLUDED_discord_ActivityParty
#include <discord/ActivityParty.h>
#endif
#ifndef INCLUDED_discord_ActivitySecrets
#include <discord/ActivitySecrets.h>
#endif
#ifndef INCLUDED_discord_ActivityTimestamps
#include <discord/ActivityTimestamps.h>
#endif
#ifndef INCLUDED_discord_Core
#include <discord/Core.h>
#endif
#ifndef INCLUDED_haxe_Int64Helper
#include <haxe/Int64Helper.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_df13cafffbed243f_14_main,"Test","main",0x9c6c95b5,"Test.main","Test.hx",14,0x8afb218c)
HX_LOCAL_STACK_FRAME(_hx_pos_df13cafffbed243f_6_main,"Test","main",0x9c6c95b5,"Test.main","Test.hx",6,0x8afb218c)

void Test_obj::__construct() { }

Dynamic Test_obj::__CreateEmpty() { return new Test_obj; }

void *Test_obj::_hx_vtable = 0;

Dynamic Test_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Test_obj > _hx_result = new Test_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Test_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0c25ea96;
}

void Test_obj::main(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(int result){
            			HX_GC_STACKFRAME(&_hx_pos_df13cafffbed243f_14_main)
HXLINE(  14)			::haxe::Log_obj::trace(result,::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),14,HX_("Test",72,f4,d2,37),HX_("main",39,38,56,48)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_df13cafffbed243f_6_main)
HXLINE(   7)		 ::discord::Core core =  ::discord::Core_obj::__alloc( HX_CTX );
HXLINE(   8)		::discord::Core_obj::create(::haxe::Int64Helper_obj::parseString(HX_("1186993153513889792",d4,6f,4a,d2)),( (::cpp::UInt64)(1) ),core);
HXLINE(   9)		 ::discord::ActivityManager _hx_tmp = core->get_activityManager();
HXDLIN(   9)		_hx_tmp->updateActivity( ::discord::Activity_obj::__alloc( HX_CTX ,null(),null(),null(),null(),HX_("",00,00,00,00),null(), ::discord::ActivityAssets_obj::__alloc( HX_CTX ,HX_("icon",79,e7,b2,45),null(),null(),null()),null(),null(),null(),null()), ::Dynamic(new _hx_Closure_0()));
HXLINE(  16)		while(true){
HXLINE(  17)			int result = core->runCallbacks();
HXLINE(  18)			if ((result != 0)) {
HXLINE(  19)				::haxe::Log_obj::trace(result,::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),19,HX_("Test",72,f4,d2,37),HX_("main",39,38,56,48)));
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Test_obj,main,(void))


Test_obj::Test_obj()
{
}

bool Test_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Test_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Test_obj_sStaticStorageInfo = 0;
#endif

::hx::Class Test_obj::__mClass;

static ::String Test_obj_sStaticFields[] = {
	HX_("main",39,38,56,48),
	::String(null())
};

void Test_obj::__register()
{
	Test_obj _hx_dummy;
	Test_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Test",72,f4,d2,37);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Test_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Test_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Test_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Test_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Test_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

