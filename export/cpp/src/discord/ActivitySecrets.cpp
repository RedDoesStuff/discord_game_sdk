// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
#ifndef INCLUDED_discord_ActivitySecrets
#include <discord/ActivitySecrets.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_699c9a626acf5a85_566_new,"discord.ActivitySecrets","new",0xd97e4504,"discord.ActivitySecrets.new","discord/Types.hx",566,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_699c9a626acf5a85_575_get_match,"discord.ActivitySecrets","get_match",0xb9062d40,"discord.ActivitySecrets.get_match","discord/Types.hx",575,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_699c9a626acf5a85_581_set_match,"discord.ActivitySecrets","set_match",0x9c57194c,"discord.ActivitySecrets.set_match","discord/Types.hx",581,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_699c9a626acf5a85_587_get_join,"discord.ActivitySecrets","get_join",0x6d18284f,"discord.ActivitySecrets.get_join","discord/Types.hx",587,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_699c9a626acf5a85_593_set_join,"discord.ActivitySecrets","set_join",0x1b7581c3,"discord.ActivitySecrets.set_join","discord/Types.hx",593,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_699c9a626acf5a85_599_get_spectate,"discord.ActivitySecrets","get_spectate",0xe77062be,"discord.ActivitySecrets.get_spectate","discord/Types.hx",599,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_699c9a626acf5a85_605_set_spectate,"discord.ActivitySecrets","set_spectate",0xfc698632,"discord.ActivitySecrets.set_spectate","discord/Types.hx",605,0xbb915808)
namespace discord{

void ActivitySecrets_obj::__construct(::String match,::String join,::String spectate){
            	HX_STACKFRAME(&_hx_pos_699c9a626acf5a85_566_new)
HXLINE( 567)		::String tmp = match;
HXDLIN( 567)		::String _hx_tmp;
HXDLIN( 567)		if (::hx::IsNotNull( tmp )) {
HXLINE( 567)			_hx_tmp = tmp;
            		}
            		else {
HXLINE( 567)			_hx_tmp = HX_("",00,00,00,00);
            		}
HXDLIN( 567)		this->set_match(_hx_tmp);
HXLINE( 568)		::String tmp1 = join;
HXDLIN( 568)		::String _hx_tmp1;
HXDLIN( 568)		if (::hx::IsNotNull( tmp1 )) {
HXLINE( 568)			_hx_tmp1 = tmp1;
            		}
            		else {
HXLINE( 568)			_hx_tmp1 = HX_("",00,00,00,00);
            		}
HXDLIN( 568)		this->set_join(_hx_tmp1);
HXLINE( 569)		::String tmp2 = spectate;
HXDLIN( 569)		::String _hx_tmp2;
HXDLIN( 569)		if (::hx::IsNotNull( tmp2 )) {
HXLINE( 569)			_hx_tmp2 = tmp2;
            		}
            		else {
HXLINE( 569)			_hx_tmp2 = HX_("",00,00,00,00);
            		}
HXDLIN( 569)		this->set_spectate(_hx_tmp2);
            	}

Dynamic ActivitySecrets_obj::__CreateEmpty() { return new ActivitySecrets_obj; }

void *ActivitySecrets_obj::_hx_vtable = 0;

Dynamic ActivitySecrets_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ActivitySecrets_obj > _hx_result = new ActivitySecrets_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool ActivitySecrets_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4d707aa8;
}

::String ActivitySecrets_obj::get_match(){
            	HX_STACKFRAME(&_hx_pos_699c9a626acf5a85_575_get_match)
            	return internal_.match;

HXDLIN( 575)		return HX_("",00,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ActivitySecrets_obj,get_match,return )

::String ActivitySecrets_obj::set_match(::String v){
            	HX_STACKFRAME(&_hx_pos_699c9a626acf5a85_581_set_match)
            	strncpy(internal_.match, v, 128);
					internal_.match[128 - 1] = '\0';
					return internal_.match;

HXDLIN( 581)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ActivitySecrets_obj,set_match,return )

::String ActivitySecrets_obj::get_join(){
            	HX_STACKFRAME(&_hx_pos_699c9a626acf5a85_587_get_join)
            	return internal_.join;

HXDLIN( 587)		return HX_("",00,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ActivitySecrets_obj,get_join,return )

::String ActivitySecrets_obj::set_join(::String v){
            	HX_STACKFRAME(&_hx_pos_699c9a626acf5a85_593_set_join)
            	strncpy(internal_.join, v, 128);
					internal_.join[128 - 1] = '\0';
					return internal_.join;

HXDLIN( 593)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ActivitySecrets_obj,set_join,return )

::String ActivitySecrets_obj::get_spectate(){
            	HX_STACKFRAME(&_hx_pos_699c9a626acf5a85_599_get_spectate)
            	return internal_.spectate;

HXDLIN( 599)		return HX_("",00,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ActivitySecrets_obj,get_spectate,return )

::String ActivitySecrets_obj::set_spectate(::String v){
            	HX_STACKFRAME(&_hx_pos_699c9a626acf5a85_605_set_spectate)
            	strncpy(internal_.spectate, v, 128);
					internal_.spectate[128 - 1] = '\0';
					return internal_.spectate;

HXDLIN( 605)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ActivitySecrets_obj,set_spectate,return )


ActivitySecrets_obj::ActivitySecrets_obj()
{
}

void ActivitySecrets_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ActivitySecrets);
	HX_MARK_MEMBER_NAME(internal_,"internal_");
	HX_MARK_END_CLASS();
}

void ActivitySecrets_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(internal_,"internal_");
}

::hx::Val ActivitySecrets_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"join") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_join() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"match") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_match() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_join") ) { return ::hx::Val( get_join_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_join") ) { return ::hx::Val( set_join_dyn() ); }
		if (HX_FIELD_EQ(inName,"spectate") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_spectate() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"internal_") ) { return ::hx::Val( cpp::Struct<  DiscordActivitySecrets >( internal_ ) ); }
		if (HX_FIELD_EQ(inName,"get_match") ) { return ::hx::Val( get_match_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_match") ) { return ::hx::Val( set_match_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_spectate") ) { return ::hx::Val( get_spectate_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_spectate") ) { return ::hx::Val( set_spectate_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ActivitySecrets_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"join") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_join(inValue.Cast< ::String >()) ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"match") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_match(inValue.Cast< ::String >()) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"spectate") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_spectate(inValue.Cast< ::String >()) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"internal_") ) { internal_=inValue.Cast< cpp::Struct<  DiscordActivitySecrets >  >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ActivitySecrets_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("internal_",82,ee,23,3f));
	outFields->push(HX_("match",45,49,23,03));
	outFields->push(HX_("join",ea,33,65,46));
	outFields->push(HX_("spectate",d9,d7,ba,92));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ActivitySecrets_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /*  DiscordActivitySecrets */ ,(int)offsetof(ActivitySecrets_obj,internal_),HX_("internal_",82,ee,23,3f)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ActivitySecrets_obj_sStaticStorageInfo = 0;
#endif

static ::String ActivitySecrets_obj_sMemberFields[] = {
	HX_("internal_",82,ee,23,3f),
	HX_("get_match",9c,a5,cc,46),
	HX_("set_match",a8,91,1d,2a),
	HX_("get_join",73,ef,1f,c6),
	HX_("set_join",e7,48,7d,74),
	HX_("get_spectate",e2,8b,d4,47),
	HX_("set_spectate",56,af,cd,5c),
	::String(null()) };

::hx::Class ActivitySecrets_obj::__mClass;

void ActivitySecrets_obj::__register()
{
	ActivitySecrets_obj _hx_dummy;
	ActivitySecrets_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("discord.ActivitySecrets",12,b3,b6,10);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ActivitySecrets_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ActivitySecrets_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ActivitySecrets_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ActivitySecrets_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace discord
