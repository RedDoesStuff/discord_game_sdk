// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
#ifndef INCLUDED_discord_ActivityTimestamps
#include <discord/ActivityTimestamps.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_004c568e517c174e_402_new,"discord.ActivityTimestamps","new",0x8e32ab20,"discord.ActivityTimestamps.new","discord/Types.hx",402,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_004c568e517c174e_410_get_start,"discord.ActivityTimestamps","get_start",0x874c3b79,"discord.ActivityTimestamps.get_start","discord/Types.hx",410,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_004c568e517c174e_414_set_start,"discord.ActivityTimestamps","set_start",0x6a9d2785,"discord.ActivityTimestamps.set_start","discord/Types.hx",414,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_004c568e517c174e_420_get_end,"discord.ActivityTimestamps","get_end",0xe3050732,"discord.ActivityTimestamps.get_end","discord/Types.hx",420,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_004c568e517c174e_424_set_end,"discord.ActivityTimestamps","set_end",0xd606983e,"discord.ActivityTimestamps.set_end","discord/Types.hx",424,0xbb915808)
namespace discord{

void ActivityTimestamps_obj::__construct( ::Dynamic start, ::Dynamic end){
            	HX_STACKFRAME(&_hx_pos_004c568e517c174e_402_new)
HXLINE( 403)		 ::Dynamic tmp = start;
HXDLIN( 403)		::cpp::Int64 _hx_tmp;
HXDLIN( 403)		if (::hx::IsNotNull( tmp )) {
HXLINE( 403)			_hx_tmp = ( (::cpp::Int64)(tmp) );
            		}
            		else {
HXLINE( 403)			_hx_tmp = ( (::cpp::Int64)(0) );
            		}
HXDLIN( 403)		this->set_start(_hx_tmp);
HXLINE( 404)		 ::Dynamic tmp1 = end;
HXDLIN( 404)		::cpp::Int64 _hx_tmp1;
HXDLIN( 404)		if (::hx::IsNotNull( tmp1 )) {
HXLINE( 404)			_hx_tmp1 = ( (::cpp::Int64)(tmp1) );
            		}
            		else {
HXLINE( 404)			_hx_tmp1 = ( (::cpp::Int64)(0) );
            		}
HXDLIN( 404)		this->set_end(_hx_tmp1);
            	}

Dynamic ActivityTimestamps_obj::__CreateEmpty() { return new ActivityTimestamps_obj; }

void *ActivityTimestamps_obj::_hx_vtable = 0;

Dynamic ActivityTimestamps_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ActivityTimestamps_obj > _hx_result = new ActivityTimestamps_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ActivityTimestamps_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x05c799c8;
}

::cpp::Int64 ActivityTimestamps_obj::get_start(){
            	HX_STACKFRAME(&_hx_pos_004c568e517c174e_410_get_start)
            	return internal_.start;

HXDLIN( 410)		return ( (::cpp::Int64)(0) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ActivityTimestamps_obj,get_start,return )

::cpp::Int64 ActivityTimestamps_obj::set_start(::cpp::Int64 v){
            	HX_STACKFRAME(&_hx_pos_004c568e517c174e_414_set_start)
            	internal_.start = v;

HXDLIN( 414)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ActivityTimestamps_obj,set_start,return )

::cpp::Int64 ActivityTimestamps_obj::get_end(){
            	HX_STACKFRAME(&_hx_pos_004c568e517c174e_420_get_end)
            	return internal_.end;

HXDLIN( 420)		return ( (::cpp::Int64)(0) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ActivityTimestamps_obj,get_end,return )

::cpp::Int64 ActivityTimestamps_obj::set_end(::cpp::Int64 v){
            	HX_STACKFRAME(&_hx_pos_004c568e517c174e_424_set_end)
            	internal_.end = v;

HXDLIN( 424)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ActivityTimestamps_obj,set_end,return )


ActivityTimestamps_obj::ActivityTimestamps_obj()
{
}

void ActivityTimestamps_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ActivityTimestamps);
	HX_MARK_MEMBER_NAME(internal_,"internal_");
	HX_MARK_END_CLASS();
}

void ActivityTimestamps_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(internal_,"internal_");
}

::hx::Val ActivityTimestamps_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_end() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_start() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"get_end") ) { return ::hx::Val( get_end_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_end") ) { return ::hx::Val( set_end_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"internal_") ) { return ::hx::Val( cpp::Struct<  DiscordActivityTimestamps >( internal_ ) ); }
		if (HX_FIELD_EQ(inName,"get_start") ) { return ::hx::Val( get_start_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_start") ) { return ::hx::Val( set_start_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ActivityTimestamps_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_end(inValue.Cast< ::cpp::Int64 >()) ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_start(inValue.Cast< ::cpp::Int64 >()) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"internal_") ) { internal_=inValue.Cast< cpp::Struct<  DiscordActivityTimestamps >  >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ActivityTimestamps_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("internal_",82,ee,23,3f));
	outFields->push(HX_("start",62,74,0b,84));
	outFields->push(HX_("end",db,03,4d,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ActivityTimestamps_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /*  DiscordActivityTimestamps */ ,(int)offsetof(ActivityTimestamps_obj,internal_),HX_("internal_",82,ee,23,3f)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ActivityTimestamps_obj_sStaticStorageInfo = 0;
#endif

static ::String ActivityTimestamps_obj_sMemberFields[] = {
	HX_("internal_",82,ee,23,3f),
	HX_("get_start",b9,d0,b4,c7),
	HX_("set_start",c5,bc,05,ab),
	HX_("get_end",72,cc,c1,26),
	HX_("set_end",7e,5d,c3,19),
	::String(null()) };

::hx::Class ActivityTimestamps_obj::__mClass;

void ActivityTimestamps_obj::__register()
{
	ActivityTimestamps_obj _hx_dummy;
	ActivityTimestamps_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("discord.ActivityTimestamps",2e,db,fe,da);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ActivityTimestamps_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ActivityTimestamps_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ActivityTimestamps_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ActivityTimestamps_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace discord
