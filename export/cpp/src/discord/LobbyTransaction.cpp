// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
#ifndef INCLUDED_discord_LobbyTransaction
#include <discord/LobbyTransaction.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_41efc225d444f5b3_1272_new,"discord.LobbyTransaction","new",0x0adc487c,"discord.LobbyTransaction.new","discord/Types.hx",1272,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_41efc225d444f5b3_1276_setType,"discord.LobbyTransaction","setType",0x35e9e998,"discord.LobbyTransaction.setType","discord/Types.hx",1276,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_41efc225d444f5b3_1281_setOwner,"discord.LobbyTransaction","setOwner",0x146da395,"discord.LobbyTransaction.setOwner","discord/Types.hx",1281,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_41efc225d444f5b3_1286_setCapacity,"discord.LobbyTransaction","setCapacity",0x0243bf18,"discord.LobbyTransaction.setCapacity","discord/Types.hx",1286,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_41efc225d444f5b3_1291_setMetadata,"discord.LobbyTransaction","setMetadata",0x7ea2a54d,"discord.LobbyTransaction.setMetadata","discord/Types.hx",1291,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_41efc225d444f5b3_1296_deleteMetadata,"discord.LobbyTransaction","deleteMetadata",0xf8bb8c1e,"discord.LobbyTransaction.deleteMetadata","discord/Types.hx",1296,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_41efc225d444f5b3_1301_setLocked,"discord.LobbyTransaction","setLocked",0xf5f9ef68,"discord.LobbyTransaction.setLocked","discord/Types.hx",1301,0xbb915808)
namespace discord{

void LobbyTransaction_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_41efc225d444f5b3_1272_new)
            	}

Dynamic LobbyTransaction_obj::__CreateEmpty() { return new LobbyTransaction_obj; }

void *LobbyTransaction_obj::_hx_vtable = 0;

Dynamic LobbyTransaction_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< LobbyTransaction_obj > _hx_result = new LobbyTransaction_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool LobbyTransaction_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3bd47634;
}

int LobbyTransaction_obj::setType(int type){
            	HX_STACKFRAME(&_hx_pos_41efc225d444f5b3_1276_setType)
            	return (int)internal_->set_type(internal_, (EDiscordLobbyType)type);

HXDLIN(1276)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(LobbyTransaction_obj,setType,return )

int LobbyTransaction_obj::setOwner(::cpp::Int64 ownerID){
            	HX_STACKFRAME(&_hx_pos_41efc225d444f5b3_1281_setOwner)
            	return (int)internal_->set_owner(internal_, ownerID);

HXDLIN(1281)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(LobbyTransaction_obj,setOwner,return )

int LobbyTransaction_obj::setCapacity(unsigned int capacity){
            	HX_STACKFRAME(&_hx_pos_41efc225d444f5b3_1286_setCapacity)
            	return (int)internal_->set_owner(internal_, capacity);

HXDLIN(1286)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(LobbyTransaction_obj,setCapacity,return )

int LobbyTransaction_obj::setMetadata(::String key,::String value){
            	HX_STACKFRAME(&_hx_pos_41efc225d444f5b3_1291_setMetadata)
            	return (int)internal_->set_metadata(internal_, const_cast<char*>(key.__s), const_cast<char*>(value.__s));

HXDLIN(1291)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC2(LobbyTransaction_obj,setMetadata,return )

int LobbyTransaction_obj::deleteMetadata(::String key){
            	HX_STACKFRAME(&_hx_pos_41efc225d444f5b3_1296_deleteMetadata)
            	return (int)internal_->delete_metadata(internal_, const_cast<char*>(key.__s));

HXDLIN(1296)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(LobbyTransaction_obj,deleteMetadata,return )

int LobbyTransaction_obj::setLocked(bool locked){
            	HX_STACKFRAME(&_hx_pos_41efc225d444f5b3_1301_setLocked)
            	return (int)internal_->set_locked(internal_, (locked ? 1 : 0));

HXDLIN(1301)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(LobbyTransaction_obj,setLocked,return )


LobbyTransaction_obj::LobbyTransaction_obj()
{
}

void LobbyTransaction_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(LobbyTransaction);
	HX_MARK_MEMBER_NAME(internal_,"internal_");
	HX_MARK_END_CLASS();
}

void LobbyTransaction_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(internal_,"internal_");
}

::hx::Val LobbyTransaction_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"setType") ) { return ::hx::Val( setType_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setOwner") ) { return ::hx::Val( setOwner_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"setLocked") ) { return ::hx::Val( setLocked_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"setCapacity") ) { return ::hx::Val( setCapacity_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMetadata") ) { return ::hx::Val( setMetadata_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"deleteMetadata") ) { return ::hx::Val( deleteMetadata_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

void LobbyTransaction_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("internal_",82,ee,23,3f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo LobbyTransaction_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /*  IDiscordLobbyTransaction* */ ,(int)offsetof(LobbyTransaction_obj,internal_),HX_("internal_",82,ee,23,3f)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *LobbyTransaction_obj_sStaticStorageInfo = 0;
#endif

static ::String LobbyTransaction_obj_sMemberFields[] = {
	HX_("setType",7c,33,8d,12),
	HX_("setOwner",31,01,ab,46),
	HX_("setCapacity",fc,ca,1b,f4),
	HX_("setMetadata",31,b1,7a,70),
	HX_("deleteMetadata",ba,06,f1,99),
	HX_("setLocked",4c,7a,6e,b9),
	::String(null()) };

::hx::Class LobbyTransaction_obj::__mClass;

void LobbyTransaction_obj::__register()
{
	LobbyTransaction_obj _hx_dummy;
	LobbyTransaction_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("discord.LobbyTransaction",8a,9a,ff,55);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(LobbyTransaction_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< LobbyTransaction_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LobbyTransaction_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LobbyTransaction_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace discord
