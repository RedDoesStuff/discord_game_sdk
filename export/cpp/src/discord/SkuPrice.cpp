// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_6db1f306f8fa425f
#define INCLUDED_6db1f306f8fa425f
#include "C:/Users/Home/Documents/GitHub/discord_game_sdk/haxe/discord/_internal/ffi.h"
#endif
#ifndef INCLUDED_discord_SkuPrice
#include <discord/SkuPrice.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_22d015a7f772821c_1103_new,"discord.SkuPrice","new",0xa0e4a780,"discord.SkuPrice.new","discord/Types.hx",1103,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_22d015a7f772821c_1111_get_amount,"discord.SkuPrice","get_amount",0xdb20ce81,"discord.SkuPrice.get_amount","discord/Types.hx",1111,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_22d015a7f772821c_1115_set_amount,"discord.SkuPrice","set_amount",0xde9e6cf5,"discord.SkuPrice.set_amount","discord/Types.hx",1115,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_22d015a7f772821c_1121_get_currency,"discord.SkuPrice","get_currency",0xb1ca003a,"discord.SkuPrice.get_currency","discord/Types.hx",1121,0xbb915808)
HX_LOCAL_STACK_FRAME(_hx_pos_22d015a7f772821c_1127_set_currency,"discord.SkuPrice","set_currency",0xc6c323ae,"discord.SkuPrice.set_currency","discord/Types.hx",1127,0xbb915808)
namespace discord{

void SkuPrice_obj::__construct( ::Dynamic amount,::String currency){
            	HX_STACKFRAME(&_hx_pos_22d015a7f772821c_1103_new)
HXLINE(1104)		 ::Dynamic tmp = amount;
HXDLIN(1104)		unsigned int _hx_tmp;
HXDLIN(1104)		if (::hx::IsNotNull( tmp )) {
HXLINE(1104)			_hx_tmp = ( (unsigned int)(tmp) );
            		}
            		else {
HXLINE(1104)			_hx_tmp = ( (unsigned int)(0) );
            		}
HXDLIN(1104)		this->set_amount(_hx_tmp);
HXLINE(1105)		::String tmp1 = currency;
HXDLIN(1105)		::String _hx_tmp1;
HXDLIN(1105)		if (::hx::IsNotNull( tmp1 )) {
HXLINE(1105)			_hx_tmp1 = tmp1;
            		}
            		else {
HXLINE(1105)			_hx_tmp1 = HX_("",00,00,00,00);
            		}
HXDLIN(1105)		this->set_currency(_hx_tmp1);
            	}

Dynamic SkuPrice_obj::__CreateEmpty() { return new SkuPrice_obj; }

void *SkuPrice_obj::_hx_vtable = 0;

Dynamic SkuPrice_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SkuPrice_obj > _hx_result = new SkuPrice_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool SkuPrice_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7fa149ac;
}

unsigned int SkuPrice_obj::get_amount(){
            	HX_STACKFRAME(&_hx_pos_22d015a7f772821c_1111_get_amount)
            	return internal_.amount;

HXDLIN(1111)		return ( (unsigned int)(0) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(SkuPrice_obj,get_amount,return )

unsigned int SkuPrice_obj::set_amount(unsigned int v){
            	HX_STACKFRAME(&_hx_pos_22d015a7f772821c_1115_set_amount)
            	internal_.amount = v;

HXDLIN(1115)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkuPrice_obj,set_amount,return )

::String SkuPrice_obj::get_currency(){
            	HX_STACKFRAME(&_hx_pos_22d015a7f772821c_1121_get_currency)
            	return internal_.currency;

HXDLIN(1121)		return HX_("",00,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(SkuPrice_obj,get_currency,return )

::String SkuPrice_obj::set_currency(::String v){
            	HX_STACKFRAME(&_hx_pos_22d015a7f772821c_1127_set_currency)
            	strncpy(internal_.currency, v, 16);
					internal_.currency[16 - 1] = '\0';
					return internal_.currency;

HXDLIN(1127)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(SkuPrice_obj,set_currency,return )


SkuPrice_obj::SkuPrice_obj()
{
}

void SkuPrice_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(SkuPrice);
	HX_MARK_MEMBER_NAME(internal_,"internal_");
	HX_MARK_END_CLASS();
}

void SkuPrice_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(internal_,"internal_");
}

::hx::Val SkuPrice_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"amount") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_amount() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"currency") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_currency() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"internal_") ) { return ::hx::Val( cpp::Struct<  DiscordSkuPrice >( internal_ ) ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_amount") ) { return ::hx::Val( get_amount_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_amount") ) { return ::hx::Val( set_amount_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_currency") ) { return ::hx::Val( get_currency_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_currency") ) { return ::hx::Val( set_currency_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val SkuPrice_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"amount") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_amount(inValue.Cast< unsigned int >()) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"currency") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_currency(inValue.Cast< ::String >()) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"internal_") ) { internal_=inValue.Cast< cpp::Struct<  DiscordSkuPrice >  >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void SkuPrice_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("internal_",82,ee,23,3f));
	outFields->push(HX_("amount",d8,11,03,d5));
	outFields->push(HX_("currency",51,07,45,9b));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo SkuPrice_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /*  DiscordSkuPrice */ ,(int)offsetof(SkuPrice_obj,internal_),HX_("internal_",82,ee,23,3f)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *SkuPrice_obj_sStaticStorageInfo = 0;
#endif

static ::String SkuPrice_obj_sMemberFields[] = {
	HX_("internal_",82,ee,23,3f),
	HX_("get_amount",a1,81,8a,c5),
	HX_("set_amount",15,20,08,c9),
	HX_("get_currency",5a,bb,5e,50),
	HX_("set_currency",ce,de,57,65),
	::String(null()) };

::hx::Class SkuPrice_obj::__mClass;

void SkuPrice_obj::__register()
{
	SkuPrice_obj _hx_dummy;
	SkuPrice_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("discord.SkuPrice",8e,27,23,51);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(SkuPrice_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< SkuPrice_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SkuPrice_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SkuPrice_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace discord
